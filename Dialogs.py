from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QPixmap
import sys, os, canvas


# classes for dialog pop-ups

class BrightnessContrastDialog(QtWidgets.QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("self")
        self.resize(700, 1000)
        self.setMinimumSize(QtCore.QSize(700, 1000))
        self.setMaximumSize(QtCore.QSize(700, 1000))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        self.setFont(font)
        self.dialog_resize_layout = QtWidgets.QHBoxLayout(self)
        self.dialog_resize_layout.setObjectName("dialog_resize_layout")
        self.main_layout = QtWidgets.QVBoxLayout()
        self.main_layout.setObjectName("main_layout")
        self.channel_list_widget = QtWidgets.QListWidget(self)
        self.channel_list_widget.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.channel_list_widget.setObjectName("channel_list_widget")
        self.main_layout.addWidget(self.channel_list_widget)
        self.checkbox_layout = QtWidgets.QGridLayout()
        self.checkbox_layout.setHorizontalSpacing(6)
        self.checkbox_layout.setObjectName("checkbox_layout")
        self.invert_background_checkbox = QtWidgets.QCheckBox(self)
        self.invert_background_checkbox.setObjectName("invert_background_checkbox")
        self.checkbox_layout.addWidget(self.invert_background_checkbox, 0, 1, 1, 1)
        self.show_grayscale_checkbox = QtWidgets.QCheckBox(self)
        self.show_grayscale_checkbox.setObjectName("show_grayscale_checkbox")
        self.checkbox_layout.addWidget(self.show_grayscale_checkbox, 0, 0, 1, 1)
        self.keep_settings_checkbox = QtWidgets.QCheckBox(self)
        self.keep_settings_checkbox.setObjectName("keep_settings_checkbox")
        self.checkbox_layout.addWidget(self.keep_settings_checkbox, 1, 0, 1, 1)
        self.main_layout.addLayout(self.checkbox_layout)
        self.contrast_min_slider_layout = QtWidgets.QHBoxLayout()
        self.contrast_min_slider_layout.setObjectName("contrast_min_slider_layout")
        self.contrast_min_label = QtWidgets.QLabel(self)
        self.contrast_min_label.setMinimumSize(QtCore.QSize(80, 0))
        self.contrast_min_label.setObjectName("contrast_min_label")
        self.contrast_min_slider_layout.addWidget(self.contrast_min_label)
        self.contrast_min_slider = QtWidgets.QSlider(self)
        self.contrast_min_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.contrast_min_slider.setObjectName("contrast_min_slider")
        self.contrast_min_slider_layout.addWidget(self.contrast_min_slider)
        self.contrast_min_value_label = QtWidgets.QLabel(self)
        self.contrast_min_value_label.setMinimumSize(QtCore.QSize(80, 0))
        self.contrast_min_value_label.setObjectName("contrast_min_value_label")
        self.contrast_min_slider_layout.addWidget(self.contrast_min_value_label)
        self.main_layout.addLayout(self.contrast_min_slider_layout)
        self.contrast_max_slider_layout = QtWidgets.QHBoxLayout()
        self.contrast_max_slider_layout.setObjectName("contrast_max_slider_layout")
        self.contrast_max_label = QtWidgets.QLabel(self)
        self.contrast_max_label.setMinimumSize(QtCore.QSize(80, 0))
        self.contrast_max_label.setObjectName("contrast_max_label")
        self.contrast_max_slider_layout.addWidget(self.contrast_max_label)
        self.contrast_max_slider = QtWidgets.QSlider(self)
        self.contrast_max_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.contrast_max_slider.setObjectName("contrast_max_slider")
        self.contrast_max_slider_layout.addWidget(self.contrast_max_slider)
        self.contrast_max_value_label = QtWidgets.QLabel(self)
        self.contrast_max_value_label.setMinimumSize(QtCore.QSize(80, 0))
        self.contrast_max_value_label.setObjectName("contrast_max_value_label")
        self.contrast_max_slider_layout.addWidget(self.contrast_max_value_label)
        self.main_layout.addLayout(self.contrast_max_slider_layout)
        self.gamma_slider_layout = QtWidgets.QHBoxLayout()
        self.gamma_slider_layout.setObjectName("gamma_slider_layout")
        self.gamma_label = QtWidgets.QLabel(self)
        self.gamma_label.setMinimumSize(QtCore.QSize(80, 0))
        self.gamma_label.setObjectName("gamma_label")
        self.gamma_slider_layout.addWidget(self.gamma_label)
        self.gamma_slider = QtWidgets.QSlider(self)
        self.gamma_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.gamma_slider.setObjectName("gamma_slider")
        self.gamma_slider_layout.addWidget(self.gamma_slider)
        self.gamma_value_label = QtWidgets.QLabel(self)
        self.gamma_value_label.setMinimumSize(QtCore.QSize(80, 0))
        self.gamma_value_label.setObjectName("gamma_value_label")
        self.gamma_slider_layout.addWidget(self.gamma_value_label)
        self.main_layout.addLayout(self.gamma_slider_layout)
        self.auto_reset_layout = QtWidgets.QHBoxLayout()
        self.auto_reset_layout.setObjectName("auto_reset_layout")
        self.auto_button = QtWidgets.QPushButton(self)
        self.auto_button.setObjectName("auto_button")
        self.auto_reset_layout.addWidget(self.auto_button)
        self.reset_button = QtWidgets.QPushButton(self)
        self.reset_button.setObjectName("reset_button")
        self.auto_reset_layout.addWidget(self.reset_button)
        self.main_layout.addLayout(self.auto_reset_layout)
        self.contrast_histogram_view = QtWidgets.QGraphicsView(self)
        self.contrast_histogram_view.setAcceptDrops(False)
        self.contrast_histogram_view.setObjectName("contrast_histogram_view")
        self.main_layout.addWidget(self.contrast_histogram_view)
        self.dialog_resize_layout.addLayout(self.main_layout)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)
        self.show()

    def on_gamma_slider_valueChanged(self, value):
        self.gamma_value_label.setText(str(value))


    def on_contrast_max_slider_valueChanged(self, value):
        self.contrast_max_value_label.setText(str(value))

    def on_contrast_min_slider_valueChanged(self, value):
        self.contrast_min_value_label.setText(str(value))

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "Brightness and Contrast"))
        self.invert_background_checkbox.setText(_translate("self", "Invert background"))
        self.show_grayscale_checkbox.setText(_translate("self", "Show Grayscale"))
        self.keep_settings_checkbox.setText(_translate("self", "Keep Settings"))
        self.contrast_min_label.setText(_translate("self", "Min display"))
        self.contrast_max_label.setText(_translate("self", "Max display"))
        self.gamma_label.setText(_translate("self", "Gamma"))
        self.auto_button.setText(_translate("self", "Auto"))
        self.reset_button.setText(_translate("self", "Reset"))



class RotateDialog(QtWidgets.QDialog):
    def __init__(self, parent=None, canvas:canvas.ImageGraphicsView=None, pixmap:QtGui.QPixmap = None):
        super().__init__(parent)
        self.pixmap = pixmap
        self.canvas = canvas
        self.setObjectName("Rotate Dialog")
        self.setWindowTitle("Rotate")
        self.resize(274, 72)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.buttonBox = QtWidgets.QDialogButtonBox(self)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.horizontalLayout.addWidget(self.buttonBox)
        self.horizontalLayout_2.addLayout(self.horizontalLayout)
        self.buttonBox.accepted.connect(self.accept) 
        self.buttonBox.rejected.connect(self.reject) 
        QtCore.QMetaObject.connectSlotsByName(self)
        self.label.setText("Enter degrees of rotation")
        self.show()

    def accept(self):
        if self.pixmap:
            image = self.pixmap.toImage()
            transform = QtGui.QTransform()
            transform.rotate(int(self.lineEdit.text()))
            rotated_image = image.transformed(transform, QtCore.Qt.TransformationMode.SmoothTransformation)
            rotated_pixmap = QtGui.QPixmap.fromImage(rotated_image)
            self.canvas.pixmapItem.setPixmap(rotated_pixmap)
            self.canvas.scene().update()
        self.destroy()

